{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\components\\\\CartDropdown\\\\index.jsx\";\nimport React from \"react\";\nimport \"./index.scss\";\nimport CustomButton from \"../CustomButton\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"../CartItem\";\nimport { selectCartItems } from \"../../redux/cart/cartSelectors\";\nimport { createStructuredSelector } from \"reselect\"; // if i use history i need withRouter for component that is not in Route\n\nfunction CartDropdown({\n  cartItems,\n  history\n}) {\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Your cart is empty!\")), React.createElement(CustomButton, {\n    onClick: () => history.push('/checkout'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\"));\n} // make sure that cart dropdown do not render whenewer state that is not related to this component change\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown));","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\components\\CartDropdown\\index.jsx"],"names":["React","CustomButton","withRouter","connect","CartItem","selectCartItems","createStructuredSelector","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CAEA;;AACA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAF;AAAcC,EAAAA;AAAd,CAAtB,EAA8C;AAC5C,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,CAACE,MAAV,GACCF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANJ,CADF,EAUE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACK,IAAR,CAAa,WAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,CADF;AAcD,C,CAED;;;AACA,MAAMC,eAAe,GAAGT,wBAAwB,CAAC;AAC/CE,EAAAA,SAAS,EAAEH;AADoC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CACvBC,OAAO,CACLY,eADK,EAEL,IAFK,CAAP,CAGER,YAHF,CADuB,CAAzB","sourcesContent":["import React from \"react\";\r\nimport \"./index.scss\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"../CartItem\";\r\nimport { selectCartItems } from \"../../redux/cart/cartSelectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\n// if i use history i need withRouter for component that is not in Route\r\nfunction CartDropdown({ cartItems , history}) {\r\n  return (\r\n    <div className=\"cart-dropdown\">\r\n      <div className=\"cart-items\">\r\n        {cartItems.length ? (\r\n          cartItems.map(cartItem => (\r\n            <CartItem key={cartItem.id} item={cartItem} />\r\n          ))\r\n        ) : (\r\n          <span className=\"empty-message\">Your cart is empty!</span>\r\n        )}\r\n      </div>\r\n      <CustomButton onClick={() => history.push('/checkout')}>GO TO CHECKOUT</CustomButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n// make sure that cart dropdown do not render whenewer state that is not related to this component change\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    null\r\n  )(CartDropdown)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}