{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport * as actionTypes from \"../constants/index\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\"); // get our collection\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n    this.setState({\n      loading: false\n    });\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  //second par will run after this action\n  // create non blocking code, app can run without pause, when this not finish\n  yield takeEvery(actionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\redux\\shop\\shopSaga.js"],"names":["takeEvery","actionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","setState","loading","catch","error","fetchCollectionsFailure","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB,CAFsC,CAEqB;;AACrDD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACA,SAAKG,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD,GAJD,EAIGC,KAJH,CAISC,KAAK,IAAIL,QAAQ,CAACM,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAJ1B;AAKP;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC;AACA;AACA,QAAMrB,SAAS,CAACC,WAAW,CAACqB,sBAAb,EAAqClB,oBAArC,CAAf;AACD","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\r\nimport * as actionTypes from \"../constants/index\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\n\r\nexport function* fetchCollectionAsync() {\r\n  yield console.log(\"I am fired\");\r\n  const collectionRef = firestore.collection(\"collections\"); // get our collection\r\n        collectionRef.get().then(snapshot => {\r\n          const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n          dispatch(fetchCollectionsSuccess(collectionsMap))\r\n          this.setState({ loading: false });\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n  //second par will run after this action\r\n  // create non blocking code, app can run without pause, when this not finish\r\n  yield takeEvery(actionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}