{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport * as actionType from '../constants/index';\nimport { googleProvider, auth, createUserProfileDoc, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutStart, signOutSuccess, signOutFailure } from './userActions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDoc, userAuth);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuth() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess);\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(actionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(actionType.CHECK_USER_SESSION, isUserAuth);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(actionType.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuth)]);\n}","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\redux\\user\\userSaga.js"],"names":["takeLatest","put","all","call","actionType","googleProvider","auth","createUserProfileDoc","getCurrentUser","signInSuccess","signInFailure","signOutStart","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","snapshot","get","id","data","error","message","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuth","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport * as actionType from '../constants/index';\r\nimport { googleProvider, auth, createUserProfileDoc, getCurrentUser } from '../../firebase/firebase.utils';\r\nimport { signInSuccess, signInFailure, signOutStart, signOutSuccess, signOutFailure,  } from './userActions';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDoc,userAuth);\r\n        const snapshot = yield userRef.get();\r\n        yield put(signInSuccess({id:snapshot.id, ...snapshot.data()}))\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message))\r\n    }\r\n\r\n}\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email,password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* isUserAuth() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch (error) {\r\n        yield put(signInFailure)\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess))\r\n    } catch (error) {\r\n        yield (put(signOutFailure(error.message)))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(actionType.GOOGLE_SIGN_IN_START,signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(actionType.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(actionType.CHECK_USER_SESSION, isUserAuth)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(actionType.SIGN_OUT_START,signOut);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuth)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}