{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\pages\\\\ShopPage\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../../components/CollectionsOverview';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../CollectionPage';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shopActions';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections'); // get our collection\n    //whenever the collection changes\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: collections => {\n      dispatch(updateCollections(collections));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\pages\\ShopPage\\index.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BS,KAF6B,GAErB;AACJC,MAAAA,OAAO,EAAC;AADJ,KAFqB;AAAA,SAM7BC,uBAN6B,GAMH,IANG;AAAA;;AAQ7BC,EAAAA,iBAAiB,GAAG;AAAA,UACTL,iBADS,GACY,KAAKM,KADjB,CACTN,iBADS;AAEhB,UAAMO,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB,CAFgB,CAE2C;AAE3D;;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAV,MAAAA,iBAAiB,CAACW,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KAJD;AAMH;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKR,KADhB,CACEQ,KADF;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAErB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKoB,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAEnB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7B4B;;AAgCjC,SAASoB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHjB,IAAAA,iBAAiB,EAAIkB,WAAD,IAAiB;AACjCD,MAAAA,QAAQ,CAACjB,iBAAiB,CAACkB,WAAD,CAAlB,CAAR;AACH;AAHE,GAAP;AAKH;;AAED,eAAenB,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport CollectionsOverview from '../../components/CollectionsOverview';\r\nimport {Route} from 'react-router-dom';\r\nimport CollectionPage from '../CollectionPage';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux';\r\nimport { updateCollections } from '../../redux/shop/shopActions';\r\n\r\nclass ShopPage extends Component {\r\n    \r\n    state = {\r\n        loading:true\r\n    }\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const {updateCollections} = this.props\r\n        const collectionRef = firestore.collection('collections'); // get our collection\r\n\r\n        //whenever the collection changes\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap);\r\n            this.setState({loading:false})\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {match} = this.props\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateCollections : (collections) => {\r\n            dispatch(updateCollections(collections))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (ShopPage)\r\n"]},"metadata":{},"sourceType":"module"}