{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\pages\\\\CollectionPage\\\\index.jsx\";\nimport React, { useEffect } from \"react\";\nimport \"./index.scss\";\nimport { connect } from \"react-redux\";\nimport { selectCollection } from \"../../redux/shop/shopSelector\";\nimport CollectionItem from \"../../components/CollectionItem\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  // when collection changes\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state) // to pass url param\n\n});\n\nexport default connect(mapStateToProps, null)(CollectionPage);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\pages\\CollectionPage\\index.jsx"],"names":["React","useEffect","connect","selectCollection","CollectionItem","firestore","CollectionPage","collection","unsubscribeFromCollections","onSnapshot","snapshot","console","log","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAGzC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,0BAA0B,GAAGH,SAAS,CAACE,UAAV,CAAqB,aAArB,EAAoCE,UAApC,CAA+CC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAA3D,CAAnC;AACA,WAAO,MAAM;AACXF,MAAAA,0BAA0B;AAC3B,KAFD;AAGD,GALQ,EAKP,EALO,CAAT;AAJyC,QAWjCK,KAXiC,GAWhBN,UAXgB,CAWjCM,KAXiC;AAAA,QAW1BC,KAX0B,GAWhBP,UAXgB,CAW1BO,KAX0B;AAYzC,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAtBD;;AAwBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cb,EAAAA,UAAU,EAAEJ,gBAAgB,CAACiB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD,CADgC,CAC4B;;AAD5B,CAAtB,CAAxB;;AAIA,eAAejB,OAAO,CACpBgB,eADoB,EAEpB,IAFoB,CAAP,CAGbZ,cAHa,CAAf","sourcesContent":["import React,{useEffect} from \"react\";\r\nimport \"./index.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCollection } from \"../../redux/shop/shopSelector\";\r\nimport CollectionItem from \"../../components/CollectionItem\";\r\nimport { firestore } from \"../../firebase/firebase.utils\";\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n\r\n\r\n  // when collection changes\r\n  useEffect(() => {\r\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot))\r\n    return () => {\r\n      unsubscribeFromCollections()\r\n    }\r\n  },[]);\r\n\r\n  const { title, items } = collection;\r\n  return (\r\n    <div className=\"collection-page\">\r\n      <h2 className=\"title\">{title}</h2>\r\n      <div className=\"items\">\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state) // to pass url param\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(CollectionPage);\r\n"]},"metadata":{},"sourceType":"module"}