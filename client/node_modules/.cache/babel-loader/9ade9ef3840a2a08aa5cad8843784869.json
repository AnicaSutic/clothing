{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDazSwftErgVqt1GG__cUosrEEUaSEdnJE\",\n  authDomain: \"clothing-db-2a12a.firebaseapp.com\",\n  databaseURL: \"https://clothing-db-2a12a.firebaseio.com\",\n  projectId: \"clothing-db-2a12a\",\n  storageBucket: \"\",\n  messagingSenderId: \"117285361868\",\n  appId: \"1:117285361868:web:65c4ee5e137fd33d\"\n};\nexport const createUserProfileDoc = async (userAuth, additionalData) => {\n  if (!userAuth) return; // if there is no user exit\n\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid)); // to know if we stpred user object or not in database\n\n  const spanShot = await userRef.get(); // if not exist create it\n\n  if (!spanShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      // create data for user\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionsAndDoc = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); //alwaus show prompt dialog when click button\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); // sign in with that provider\n// than enable in firebase app sign in with google\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDoc","userAuth","additionalData","userRef","firestore","doc","uid","spanShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionsAndDoc","collectionKey","objectsToAdd","collectionRef","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,mCAFD;AAGXC,EAAAA,WAAW,EAAE,0CAHF;AAIXC,EAAAA,SAAS,EAAE,mBAJA;AAKXC,EAAAA,aAAa,EAAE,EALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACpE,MAAG,CAACD,QAAJ,EAAc,OADsD,CAC9C;;AACtB,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB,CAFoE,CAIpE;;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CALoE,CAOpE;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AAAA,UACZC,WADY,GACWT,QADX,CACZS,WADY;AAAA,UACCC,KADD,GACWV,QADX,CACCU,KADD;AAEnB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF;AACA,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KARD,CAQE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACH,CA1BM;AA4BPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,oBAAoB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACnE,QAAMC,aAAa,GAAGnB,SAAS,CAACoB,UAAV,CAAqBH,aAArB,CAAtB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYM,aAAZ;AACD,CAHM;AAKP,OAAO,MAAME,IAAI,GAAGlC,QAAQ,CAACkC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMsB,QAAQ,GAAG,IAAInC,QAAQ,CAACkC,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CAEA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAenC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDazSwftErgVqt1GG__cUosrEEUaSEdnJE\",\r\n    authDomain: \"clothing-db-2a12a.firebaseapp.com\",\r\n    databaseURL: \"https://clothing-db-2a12a.firebaseio.com\",\r\n    projectId: \"clothing-db-2a12a\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"117285361868\",\r\n    appId: \"1:117285361868:web:65c4ee5e137fd33d\"\r\n  };\r\n\r\nexport const createUserProfileDoc = async (userAuth, additionalData) => {\r\n    if(!userAuth) return; // if there is no user exit\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    // to know if we stpred user object or not in database\r\n    const spanShot = await userRef.get();\r\n\r\n    // if not exist create it\r\n    if(!spanShot.exists) {\r\n      const {displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try {\r\n        // create data for user\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch (error) {\r\n        console.log('error creating user', error.message);\r\n      }\r\n    }\r\n    \r\n    return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const addCollectionsAndDoc = (collectionKey, objectsToAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  console.log(collectionRef);\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n//alwaus show prompt dialog when click button\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\n\r\n// sign in with that provider\r\n// than enable in firebase app sign in with google\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}