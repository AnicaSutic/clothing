{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\pages\\\\ShopPage\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../../components/CollectionsOverview';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../CollectionPage';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/HOC/withSpinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections'); // get our collection\n    //whenever the collection changes\n    // collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({loading:false});\n    // })\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: collections => {\n      dispatch(updateCollections(collections));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\pages\\ShopPage\\index.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BY,KAF6B,GAErB;AACJC,MAAAA,OAAO,EAAC;AADJ,KAFqB;AAAA,SAM7BC,uBAN6B,GAMH,IANG;AAAA;;AAQ7BC,EAAAA,iBAAiB,GAAG;AAAA,UACTR,iBADS,GACY,KAAKS,KADjB,CACTT,iBADS;AAEhB,UAAMU,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB,CAFgB,CAE2C;AAE3D;AACA;AACA;AACA;AACA;AACA;;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CACIC,QAAQ,IAAI;AACJ,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KALT;AAOH;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKT,KADhB,CACES,KADF;AAAA,UAEEZ,OAFF,GAEa,KAAKD,KAFlB,CAEEC,OAFF;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGV,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEJ,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGV,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CADJ;AAMH;;AArC4B;;AAwCjC,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrB,IAAAA,iBAAiB,EAAIsB,WAAD,IAAiB;AACjCD,MAAAA,QAAQ,CAACrB,iBAAiB,CAACsB,WAAD,CAAlB,CAAR;AACH;AAHE,GAAP;AAKH;;AAED,eAAevB,OAAO,CAAC,IAAD,EAAMqB,kBAAN,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport CollectionsOverview from '../../components/CollectionsOverview';\r\nimport {Route} from 'react-router-dom';\r\nimport CollectionPage from '../CollectionPage';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux';\r\nimport { updateCollections } from '../../redux/shop/shopActions';\r\nimport WithSpinner from '../../components/HOC/withSpinner';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends Component {\r\n    \r\n    state = {\r\n        loading:true\r\n    }\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const {updateCollections} = this.props\r\n        const collectionRef = firestore.collection('collections'); // get our collection\r\n\r\n        //whenever the collection changes\r\n        // collectionRef.onSnapshot(async snapshot => {\r\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionsMap);\r\n        //     this.setState({loading:false});\r\n        // })\r\n\r\n        collectionRef.get().then(\r\n            snapshot => {\r\n                    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n                    updateCollections(collectionsMap);\r\n                    this.setState({loading:false});\r\n                })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {match} = this.props\r\n        const {loading} = this.state\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> } />\r\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} /> } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateCollections : (collections) => {\r\n            dispatch(updateCollections(collections))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (ShopPage)\r\n"]},"metadata":{},"sourceType":"module"}