{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ShopPage from \"./pages/ShopPage\";\nimport Header from \"./components/Header\";\nimport SignInUp from \"./pages/SIgn/SIgnInUp\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/userSelector\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/CheckoutPage\";\nimport { selectShopCollectionForPreview } from \"./redux/shop/shopSelector\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {//const { setCurrentUser } = this.props;\n    // this is a metoh in auth library, param is what is user state\n    // this connection is always open and we need to close it in unmount\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDoc(userAuth);\n    //     userRef.onSnapshot(snapshot => {\n    //       // this.setState({\n    //       //   currentUser: {\n    //       //     id: snapshot.id,\n    //       //     ...snapshot.data()\n    //       //   }\n    //       // }, () => {\n    //       //   console.log(this.state);\n    //       // });\n    //       setCurrentUser({\n    //         id: snapshot.id,\n    //         ...snapshot.data()\n    //       });\n    //     });\n    //   }\n    //   setCurrentUser(userAuth);\n    //   // we just wanted programmicaly to add data to dataabse now it is not necessary\n    //   //addCollectionsAndDoc('collections',collectionsArray.map(({title,items}) => ({title,items})));\n    //   // this.setState({\n    //   //   currentUser:user\n    //   // });\n    // });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/sign\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : React.createElement(SignInUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  collectionsArray: selectShopCollectionForPreview\n}); // saga is handling now\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     setCurrentUser: user => {\n//       dispatch(setCurrentUser(user));\n//     }\n//   };\n// }\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\App.js"],"names":["React","HomePage","Route","Switch","Redirect","ShopPage","Header","SignInUp","connect","selectCurrentUser","createStructuredSelector","CheckoutPage","selectShopCollectionForPreview","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps","collectionsArray"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,8BAAT,QAA+C,2BAA/C;;AAEA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKF,mBAAL;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEjB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEI,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEM,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKQ,KAAL,CAAWC,WAAX,GAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,GAA+C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAiBD;;AA3D+B;;AA+DlC,MAAMC,eAAe,GAAGX,wBAAwB,CAAC;AAC/CU,EAAAA,WAAW,EAAEX,iBADkC;AAE/Ca,EAAAA,gBAAgB,EAAEV;AAF6B,CAAD,CAAhD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeJ,OAAO,CACpBa,eADoB,EAEpB,IAFoB,CAAP,CAGbR,GAHa,CAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ShopPage from \"./pages/ShopPage\";\nimport Header from \"./components/Header\";\nimport SignInUp from \"./pages/SIgn/SIgnInUp\";\n\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/userSelector\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutPage from \"./pages/CheckoutPage\";\nimport { selectShopCollectionForPreview } from \"./redux/shop/shopSelector\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    //const { setCurrentUser } = this.props;\n    // this is a metoh in auth library, param is what is user state\n    // this connection is always open and we need to close it in unmount\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDoc(userAuth);\n    //     userRef.onSnapshot(snapshot => {\n    //       // this.setState({\n    //       //   currentUser: {\n    //       //     id: snapshot.id,\n    //       //     ...snapshot.data()\n    //       //   }\n    //       // }, () => {\n    //       //   console.log(this.state);\n    //       // });\n    //       setCurrentUser({\n    //         id: snapshot.id,\n    //         ...snapshot.data()\n    //       });\n    //     });\n    //   }\n\n    //   setCurrentUser(userAuth);\n    //   // we just wanted programmicaly to add data to dataabse now it is not necessary\n    //   //addCollectionsAndDoc('collections',collectionsArray.map(({title,items}) => ({title,items})));\n\n    //   // this.setState({\n    //   //   currentUser:user\n    //   // });\n    // });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n          <Route\n            exact\n            path=\"/sign\"\n            render={() =>\n              this.props.currentUser ? <Redirect to=\"/\" /> : <SignInUp />\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  collectionsArray: selectShopCollectionForPreview\n});\n\n// saga is handling now\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     setCurrentUser: user => {\n//       dispatch(setCurrentUser(user));\n//     }\n//   };\n// }\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n"]},"metadata":{},"sourceType":"module"}