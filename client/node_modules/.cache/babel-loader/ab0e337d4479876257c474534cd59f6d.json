{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\components\\\\SignUp\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport \"./index.scss\";\nimport FormInput from \"../FormInput\";\nimport CustomButton from \"../CustomButton\";\nimport { connect } from 'react-redux';\nimport { signUpStart } from \"../../redux/user/userActions\";\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      const signUpStart = this.props.signUpStart;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match!\");\n        return;\n      }\n\n      if (password.length < 6) {\n        alert(\"Password must contain 6 characters!\");\n        return;\n      }\n\n      signUpStart({\n        email,\n        password,\n        displayName\n      }); // try {\n      //   const { user } = await auth.createUserWithEmailAndPassword(\n      //     email,\n      //     password\n      //   );\n      //   createUserProfileDoc(user, { displayName });\n      //   // to reset a form\n      //   this.setState({\n      //     displayName: \"\",\n      //     email: \"\",\n      //     password: \"\",\n      //     confirmPassword: \"\"\n      //   });\n      // } catch (error) {\n      //   console.log(error.message);\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      handleChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      handleChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"SIGN UP\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.user.error\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\components\\SignUp\\index.jsx"],"names":["React","Component","FormInput","CustomButton","connect","signUpStart","SignUp","constructor","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","props","alert","length","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch","userCredentials","mapStateToProps","error","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport FormInput from \"../FormInput\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport {connect} from 'react-redux';\r\nimport { signUpStart } from \"../../redux/user/userActions\";\r\n\r\n\r\n class SignUp extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    };\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    const {signUpStart} = this.props\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      alert(\"Password must contain 6 characters!\");\r\n      return;\r\n    }\r\n\r\n\r\n    signUpStart({email,password,displayName});\r\n\r\n    // try {\r\n    //   const { user } = await auth.createUserWithEmailAndPassword(\r\n    //     email,\r\n    //     password\r\n    //   );\r\n    //   createUserProfileDoc(user, { displayName });\r\n    //   // to reset a form\r\n    //   this.setState({\r\n    //     displayName: \"\",\r\n    //     email: \"\",\r\n    //     password: \"\",\r\n    //     confirmPassword: \"\"\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.log(error.message);\r\n    // }\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    return (\r\n      <div className=\"sign-up\">\r\n        <h2 className=\"title\">I do not have a account</h2>\r\n        <span>Sign up with your email and password</span>\r\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            handleChange={this.handleChange}\r\n            label=\"Display Name\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            handleChange={this.handleChange}\r\n            label=\"Email\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            handleChange={this.handleChange}\r\n            label=\"Password\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            handleChange={this.handleChange}\r\n            label=\"Confirm Password\"\r\n            required\r\n          />\r\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n        </form>\r\n        <p></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    signUpStart: (userCredentials)=> dispatch(signUpStart(userCredentials))\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n"]},"metadata":{},"sourceType":"module"}