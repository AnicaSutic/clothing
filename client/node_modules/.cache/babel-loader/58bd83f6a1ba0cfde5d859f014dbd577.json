{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\pages\\\\ShopPage\\\\index.jsx\";\nimport React, { Component, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shopActions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionLoaded } from \"../../redux/shop/shopSelector\";\nimport { CollectionsOverviewContainer } from \"../../components/CollectionsOverview/index.container\";\nimport CollectionPageContainer from \"../CollectionPage/index.container\";\n\nfunction ShopPage({\n  fetchCollectionsStart,\n  match\n}) {\n  // componentDidMount() {\n  //   this.props.fetchCollectionsStart()\n  // }\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path) //   render={props => (\n    //     <CollectionsOverviewWithSpinner\n    //       isLoading={isCollectionFetching}\n    //       {...props}\n    //     />\n    //   )}\n    ,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\") //   render={props => (\n    //     <CollectionPageWithSpinner\n    //       isLoading={!isCollectionLoaded}\n    //       {...props}\n    //     />\n    //   )}\n    ,\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    //  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\pages\\ShopPage\\index.jsx"],"names":["React","Component","useEffect","Route","connect","fetchCollectionsStart","createStructuredSelector","selectIsCollectionLoaded","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapStateToProps","isCollectionLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,4BAAT,QAA6C,sDAA7C;AACA,OAAOC,uBAAP,MAAoC,mCAApC;;AAGA,SAASC,QAAT,CAAkB;AAACL,EAAAA,qBAAD;AAAuBM,EAAAA;AAAvB,CAAlB,EAAiD;AAC/C;AACA;AACA;AACET,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,qBAAqB;AACtB,GAFQ,EAEP,CAACA,qBAAD,CAFO,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,YAAKM,KAAK,CAACC,IAAX,CAFN,CAGE;AACA;AACA;AACA;AACA;AACA;AARF;AASE,IAAA,SAAS,EAAEJ,4BATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,oBAAC,KAAD;AACE,IAAA,IAAI,YAAKG,KAAK,CAACC,IAAX,mBADN,CAEE;AACA;AACA;AACA;AACA;AACA;AAPF;AAQE,IAAA,SAAS,EAAEH,uBARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAyBD;;AAGH,MAAMI,eAAe,GAAGP,wBAAwB,CAAC;AAC/CQ,EAAAA,kBAAkB,EAAEP;AAD2B,CAAD,CAAhD;;AAIA,SAASQ,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACP;AACAX,IAAAA,qBAAqB,EAAE,MAAMW,QAAQ,CAACX,qBAAqB,EAAtB;AAF9B,GAAP;AAID;;AAED,eAAeD,OAAO,CACpBS,eADoB,EAEpBE,kBAFoB,CAAP,CAGbL,QAHa,CAAf","sourcesContent":["import React, { Component, useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shopActions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsCollectionLoaded } from \"../../redux/shop/shopSelector\";\r\nimport { CollectionsOverviewContainer } from \"../../components/CollectionsOverview/index.container\";\r\nimport CollectionPageContainer from \"../CollectionPage/index.container\";\r\n\r\n\r\nfunction ShopPage({fetchCollectionsStart,match}) {\r\n  // componentDidMount() {\r\n  //   this.props.fetchCollectionsStart()\r\n  // }\r\n    useEffect(() => {\r\n      fetchCollectionsStart()\r\n    },[fetchCollectionsStart])\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          //   render={props => (\r\n          //     <CollectionsOverviewWithSpinner\r\n          //       isLoading={isCollectionFetching}\r\n          //       {...props}\r\n          //     />\r\n          //   )}\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          //   render={props => (\r\n          //     <CollectionPageWithSpinner\r\n          //       isLoading={!isCollectionLoaded}\r\n          //       {...props}\r\n          //     />\r\n          //   )}\r\n          component={CollectionPageContainer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionLoaded: selectIsCollectionLoaded\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n  //  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}