{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport * as actionType from '../constants/index';\nimport { googleProvider, auth, createUserProfileDoc, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './userActions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDoc, userAuth, additionalData);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuth() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(actionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(actionType.CHECK_USER_SESSION, isUserAuth);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(actionType.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(actionType.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(actionType.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuth), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\redux\\user\\userSaga.js"],"names":["takeLatest","put","all","call","actionType","googleProvider","auth","createUserProfileDoc","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","snapshot","get","id","data","error","message","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuth","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport * as actionType from '../constants/index';\r\nimport { googleProvider, auth, createUserProfileDoc, getCurrentUser } from '../../firebase/firebase.utils';\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess,  } from './userActions';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDoc,userAuth, additionalData);\r\n        const snapshot = yield userRef.get();\r\n        yield put(signInSuccess({id:snapshot.id, ...snapshot.data()}))\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message))\r\n    }\r\n\r\n}\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email,password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* isUserAuth() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch (error) {\r\n        yield put(signInFailure)\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess()))\r\n    } catch (error) {\r\n        yield (put(signOutFailure(error.message)))\r\n    }\r\n}\r\n\r\nexport function* signUp({payload: {email, password, displayName}}) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n          );   \r\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\r\n    } catch (error) {\r\n        yield put(signUpFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\r\n    yield getSnapshotFromUserAuth(user,additionalData)\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(actionType.GOOGLE_SIGN_IN_START,signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(actionType.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(actionType.CHECK_USER_SESSION, isUserAuth)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(actionType.SIGN_OUT_START,signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(actionType.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(actionType.SIGN_UP_SUCCESS,signInAfterSignUp)\r\n}\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuth),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart),\r\n        call(onSignUpSuccess)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}