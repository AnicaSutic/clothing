{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInUp from './pages/SIgn/SIgnInUp';\nimport { auth, createUserProfileDoc, addCollectionsAndDoc } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/userActions';\nimport { selectCurrentUser } from './redux/user/userSelector';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/CheckoutPage';\nimport { selectShopCollectionForPreview } from './redux/shop/shopSelector';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          setCurrentUser = _this$props.setCurrentUser,\n          collectionsArray = _this$props.collectionsArray; // this is a metoh in auth library, param is what is user state \n    // this connection is always open and we need to close it in unmount\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDoc(userAuth);\n        userRef.onSnapshot(snapshot => {\n          // this.setState({\n          //   currentUser: {\n          //     id: snapshot.id,\n          //     ...snapshot.data()\n          //   }\n          // }, () => {\n          //   console.log(this.state);\n          // });\n          setCurrentUser(_objectSpread({\n            id: snapshot.id\n          }, snapshot.data()));\n        });\n      }\n\n      setCurrentUser(userAuth); // we just wanted programmicaly to add data to dataabse now it is not necessary\n      //addCollectionsAndDoc('collections',collectionsArray.map(({title,items}) => ({title,items})));\n      // this.setState({\n      //   currentUser:user\n      // });\n    });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/sign\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : React.createElement(SignInUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  collectionsArray: selectShopCollectionForPreview\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCurrentUser: user => {\n      dispatch(setCurrentUser(user));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\App.js"],"names":["React","HomePage","Route","Switch","Redirect","ShopPage","Header","SignInUp","auth","createUserProfileDoc","addCollectionsAndDoc","connect","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckoutPage","selectShopCollectionForPreview","App","Component","unsubscribeFromAuth","componentDidMount","props","collectionsArray","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInUp from './pages/SIgn/SIgnInUp';\nimport {auth, createUserProfileDoc, addCollectionsAndDoc} from './firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/userActions';\nimport { selectCurrentUser } from './redux/user/userSelector';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/CheckoutPage';\nimport { selectShopCollectionForPreview } from './redux/shop/shopSelector';\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n\n    const {setCurrentUser, collectionsArray} = this.props;\n    // this is a metoh in auth library, param is what is user state \n    // this connection is always open and we need to close it in unmount\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDoc(userAuth);\n        userRef.onSnapshot(snapshot => {\n          // this.setState({\n          //   currentUser: {\n          //     id: snapshot.id,\n          //     ...snapshot.data()\n          //   }\n          // }, () => {\n          //   console.log(this.state);\n          // });\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          })\n          \n        });\n      }\n\n      setCurrentUser(userAuth);\n      // we just wanted programmicaly to add data to dataabse now it is not necessary\n      //addCollectionsAndDoc('collections',collectionsArray.map(({title,items}) => ({title,items})));\n      \n      // this.setState({\n      //   currentUser:user\n      // });\n    });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route exact path='/sign' render={() => this.props.currentUser ? <Redirect to='/'/> : <SignInUp />} />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser:selectCurrentUser,\n  collectionsArray: selectShopCollectionForPreview\n})\n    \nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCurrentUser: (user) => {\n      dispatch(setCurrentUser(user))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (App);\n"]},"metadata":{},"sourceType":"module"}