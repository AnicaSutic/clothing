{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\components\\\\SignIn\\\\index.jsx\";\nimport React, { useState } from \"react\";\nimport \"./index.scss\";\nimport FormInput from \"../FormInput\";\nimport \"./index.scss\";\nimport CustomButton from \"../CustomButton\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/userActions\";\nimport { connect } from \"react-redux\";\n\nfunction SignIn({\n  emailSignInStart,\n  googleSignInStart\n}) {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     email: \"\",\n  //     password: \"\"\n  //   };\n  // }\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password); // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({\n    //     email: \"\",\n    //     password: \"\"\n    //   });\n    // } catch (error) {\n    //   console.log(error.message);\n    // }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Sign In with Google\"))));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\components\\SignIn\\index.jsx"],"names":["React","useState","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport FormInput from \"../FormInput\";\r\nimport \"./index.scss\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/userActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction SignIn({emailSignInStart,googleSignInStart}) {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     email: \"\",\r\n  //     password: \"\"\r\n  //   };\r\n  // }\r\n\r\n  const [userCredentials,setCredentials] = useState({email:'',password:''})\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    emailSignInStart(email,password);\r\n\r\n\r\n    // try {\r\n    //   await auth.signInWithEmailAndPassword(email, password);\r\n    //   this.setState({\r\n    //     email: \"\",\r\n    //     password: \"\"\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.log(error.message);\r\n    // }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n    setCredentials({\r\n      ...userCredentials, [name]:value\r\n    });\r\n  };\r\n\r\n    return (\r\n      <div className=\"sign-in\">\r\n        <h2>I already have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <FormInput\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            handleChange={handleChange}\r\n            label=\"Email\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            handleChange={handleChange}\r\n            label=\"Password\"\r\n            required\r\n          />\r\n          <div className=\"buttons\">\r\n            <CustomButton type=\"submit\">Sign In</CustomButton>\r\n            <CustomButton\r\n              type=\"button\"\r\n              onClick={googleSignInStart}\r\n              isGoogleSignIn\r\n            >\r\n              Sign In with Google\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email,password) => dispatch(emailSignInStart({email,password}))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}