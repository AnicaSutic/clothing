{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport { Route, Switch } from 'react-router-dom';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInUp from './pages/SIgn/SIgnInUp';\nimport { auth, createUserProfileDoc } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/userActions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    // this is a metoh in auth library, param is what is user state \n    // this connection is always open and we need to close it in unmount\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDoc(userAuth);\n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            currentUser: _objectSpread({\n              id: snapshot.id\n            }, snapshot.data())\n          }, () => {\n            console.log(this.state);\n          });\n        });\n      } // this.setState({\n      //   currentUser:user\n      // });\n\n    });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/sign\",\n      component: SignInUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCurrentUser: user => {\n      dispatch(setCurrentUser(user));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\App.js"],"names":["React","HomePage","Route","Switch","ShopPage","Header","SignInUp","auth","createUserProfileDoc","connect","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","setState","currentUser","id","data","console","log","state","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,KAAR,EAAcC,MAAd,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,IAAR,EAAcC,oBAAd,QAAyC,2BAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;;AAGA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,SAAKD,mBAAL,GAA2BN,IAAI,CAACQ,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAGA,QAAH,EAAa;AACX,cAAMC,OAAO,GAAG,MAAMT,oBAAoB,CAACQ,QAAD,CAA1C;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B,eAAKC,QAAL,CAAc;AACZC,YAAAA,WAAW;AACTC,cAAAA,EAAE,EAAEH,QAAQ,CAACG;AADJ,eAENH,QAAQ,CAACI,IAAT,EAFM;AADC,WAAd,EAKG,MAAM;AACPC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD,WAPD;AAQD,SATD;AAUD,OAbkE,CAenE;AACA;AACA;;AACD,KAlB0B,CAA3B;AAmBD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKd,mBAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE3B,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEG,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEE,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AA5C+B;;AAgDlC,SAASuB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLpB,IAAAA,cAAc,EAAGqB,IAAD,IAAU;AACxBD,MAAAA,QAAQ,CAACpB,cAAc,CAACqB,IAAD,CAAf,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,eAAetB,OAAO,CAAC,IAAD,EAAMoB,kBAAN,CAAP,CAAkClB,GAAlC,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport {Route,Switch} from 'react-router-dom';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInUp from './pages/SIgn/SIgnInUp';\nimport {auth, createUserProfileDoc} from './firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/userActions';\n\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    // this is a metoh in auth library, param is what is user state \n    // this connection is always open and we need to close it in unmount\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDoc(userAuth);\n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            currentUser: {\n              id: snapshot.id,\n              ...snapshot.data()\n            }\n          }, () => {\n            console.log(this.state);\n          });\n        });\n      }\n      \n      // this.setState({\n      //   currentUser:user\n      // });\n    });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/shop' component={ShopPage} />\n          <Route exact path='/sign' component={SignInUp} />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCurrentUser: (user) => {\n      dispatch(setCurrentUser(user))\n    }\n  }\n}\n\nexport default connect(null,mapDispatchToProps) (App);\n"]},"metadata":{},"sourceType":"module"}