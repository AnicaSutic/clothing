{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\pages\\\\ShopPage\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shopActions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionLoaded } from \"../../redux/shop/shopSelector\";\nimport { CollectionsOverviewContainer } from \"../../components/CollectionsOverview/index.container\";\nimport CollectionPageContainer from \"../CollectionPage/index.container\";\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    this.props.fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path) //   render={props => (\n      //     <CollectionsOverviewWithSpinner\n      //       isLoading={isCollectionFetching}\n      //       {...props}\n      //     />\n      //   )}\n      ,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\") //   render={props => (\n      //     <CollectionPageWithSpinner\n      //       isLoading={!isCollectionLoaded}\n      //       {...props}\n      //     />\n      //   )}\n      ,\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n    fetchCollectionStart: () => dispatch(fetchCollectionStart())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\pages\\ShopPage\\index.jsx"],"names":["React","Component","Route","connect","fetchCollectionsStartAsync","createStructuredSelector","selectIsCollectionLoaded","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","componentDidMount","props","render","match","path","mapStateToProps","isCollectionLoaded","mapDispatchToProps","dispatch","fetchCollectionStart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,4BAAT,QAA6C,sDAA7C;AACA,OAAOC,uBAAP,MAAoC,mCAApC;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC/BS,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWP,0BAAX;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKF,KADhB,CACCE,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAFN,CAGE;AACA;AACA;AACA;AACA;AACA;AARF;AASE,MAAA,SAAS,EAAEP,4BATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKM,KAAK,CAACC,IAAX,mBADN,CAEE;AACA;AACA;AACA;AACA;AACA;AAPF;AAQE,MAAA,SAAS,EAAEN,uBARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAyBD;;AAhC8B;;AAmCjC,MAAMO,eAAe,GAAGV,wBAAwB,CAAC;AAC/CW,EAAAA,kBAAkB,EAAEV;AAD2B,CAAD,CAAhD;;AAIA,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACN;AACAC,IAAAA,oBAAoB,EAAE,MAAMD,QAAQ,CAACC,oBAAoB,EAArB;AAF9B,GAAP;AAID;;AAED,eAAehB,OAAO,CACpBY,eADoB,EAEpBE,kBAFoB,CAAP,CAGbR,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shopActions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsCollectionLoaded } from \"../../redux/shop/shopSelector\";\r\nimport { CollectionsOverviewContainer } from \"../../components/CollectionsOverview/index.container\";\r\nimport CollectionPageContainer from \"../CollectionPage/index.container\";\r\n\r\nclass ShopPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          //   render={props => (\r\n          //     <CollectionsOverviewWithSpinner\r\n          //       isLoading={isCollectionFetching}\r\n          //       {...props}\r\n          //     />\r\n          //   )}\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          //   render={props => (\r\n          //     <CollectionPageWithSpinner\r\n          //       isLoading={!isCollectionLoaded}\r\n          //       {...props}\r\n          //     />\r\n          //   )}\r\n          component={CollectionPageContainer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionLoaded: selectIsCollectionLoaded\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n   // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n   fetchCollectionStart: () => dispatch(fetchCollectionStart())\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}