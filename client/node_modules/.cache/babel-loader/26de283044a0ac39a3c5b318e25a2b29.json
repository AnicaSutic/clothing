{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\components\\\\SignUp\\\\index.jsx\";\nimport React, { Component, useState } from \"react\";\nimport \"./index.scss\";\nimport FormInput from \"../FormInput\";\nimport CustomButton from \"../CustomButton\";\nimport { connect } from 'react-redux';\nimport { signUpStart } from \"../../redux/user/userActions\";\n\nfunction SignUp({\n  signUpStart,\n  error\n}) {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     displayName: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //     confirmPassword: \"\"\n  //   };\n  // }\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredetials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredetials.displayName,\n        email = userCredetials.email,\n        password = userCredetials.password,\n        confirmPassword = userCredetials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match!\");\n      return;\n    }\n\n    if (password.length < 6) {\n      alert(\"Password must contain 6 characters!\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    }); // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n    //   createUserProfileDoc(user, { displayName });\n    //   // to reset a form\n    //   this.setState({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmPassword: \"\"\n    //   });\n    // } catch (error) {\n    //   console.log(error.message);\n    // }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredetials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"SIGN UP\")), React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, error));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.user.error\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\components\\SignUp\\index.jsx"],"names":["React","Component","useState","FormInput","CustomButton","connect","signUpStart","SignUp","error","displayName","email","password","confirmPassword","userCredetials","setUserCredentials","handleSubmit","event","preventDefault","alert","length","handleChange","target","name","value","color","mapDispatchToProps","dispatch","userCredentials","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport FormInput from \"../FormInput\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport {connect} from 'react-redux';\r\nimport { signUpStart } from \"../../redux/user/userActions\";\r\n\r\n\r\n function SignUp({signUpStart,error}) {\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state = {\r\n  //     displayName: \"\",\r\n  //     email: \"\",\r\n  //     password: \"\",\r\n  //     confirmPassword: \"\"\r\n  //   };\r\n  // }\r\n\r\n  const [userCredetials,setUserCredentials] = useState({ \r\n      displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"})\r\n\r\n      const { displayName, email, password, confirmPassword } = userCredetials;\r\n\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      alert(\"Password must contain 6 characters!\");\r\n      return;\r\n    }\r\n\r\n\r\n    signUpStart({email,password,displayName});\r\n\r\n    // try {\r\n    //   const { user } = await auth.createUserWithEmailAndPassword(\r\n    //     email,\r\n    //     password\r\n    //   );\r\n    //   createUserProfileDoc(user, { displayName });\r\n    //   // to reset a form\r\n    //   this.setState({\r\n    //     displayName: \"\",\r\n    //     email: \"\",\r\n    //     password: \"\",\r\n    //     confirmPassword: \"\"\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.log(error.message);\r\n    // }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setUserCredentials({\r\n      ...userCredetials,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n \r\n    return (\r\n      <div className=\"sign-up\">\r\n        <h2 className=\"title\">I do not have a account</h2>\r\n        <span>Sign up with your email and password</span>\r\n        <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            handleChange={handleChange}\r\n            label=\"Display Name\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            handleChange={handleChange}\r\n            label=\"Email\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            handleChange={handleChange}\r\n            label=\"Password\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            handleChange={handleChange}\r\n            label=\"Confirm Password\"\r\n            required\r\n          />\r\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n        </form>\r\n        <p style={{color:'red'}}>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    signUpStart: (userCredentials)=> dispatch(signUpStart(userCredentials))\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n"]},"metadata":{},"sourceType":"module"}