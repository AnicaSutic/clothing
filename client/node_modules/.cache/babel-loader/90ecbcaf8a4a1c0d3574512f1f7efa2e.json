{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInUp from './pages/SIgn/SIgnInUp';\nimport { auth, createUserProfileDoc } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/userActions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const setCurrentUser = this.props.setCurrentUser; // this is a metoh in auth library, param is what is user state \n    // this connection is always open and we need to close it in unmount\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDoc(userAuth);\n        userRef.onSnapshot(snapshot => {\n          // this.setState({\n          //   currentUser: {\n          //     id: snapshot.id,\n          //     ...snapshot.data()\n          //   }\n          // }, () => {\n          //   console.log(this.state);\n          // });\n          setCurrentUser(_objectSpread({\n            id: snapshot.id\n          }, snapshot.data()));\n        });\n      }\n\n      setCurrentUser(userAuth); // this.setState({\n      //   currentUser:user\n      // });\n    });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/sign\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }) : React.createElement(SignInUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.user.currentUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCurrentUser: user => {\n      dispatch(setCurrentUser(user));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\App.js"],"names":["React","HomePage","Route","Switch","Redirect","ShopPage","Header","SignInUp","auth","createUserProfileDoc","connect","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,KAAR,EAAcC,MAAd,EAAqBC,QAArB,QAAoC,kBAApC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,IAAR,EAAcC,oBAAd,QAAyC,2BAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;;AAGA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAAA,UAEXJ,cAFW,GAEO,KAAKK,KAFZ,CAEXL,cAFW,EAGlB;AACA;;AACA,SAAKG,mBAAL,GAA2BN,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAGA,QAAH,EAAa;AACX,cAAMC,OAAO,GAAG,MAAMV,oBAAoB,CAACS,QAAD,CAA1C;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,UAAAA,cAAc;AACZW,YAAAA,EAAE,EAAED,QAAQ,CAACC;AADD,aAETD,QAAQ,CAACE,IAAT,EAFS,EAAd;AAID,SAbD;AAcD;;AAEDZ,MAAAA,cAAc,CAACO,QAAD,CAAd,CAnBmE,CAqBnE;AACA;AACA;AACD,KAxB0B,CAA3B;AAyBD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKV,mBAAL;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAExB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEI,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,MAAM,EAAE,MAAM,KAAKW,KAAL,CAAWU,WAAX,GAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,GAA8C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AApD+B;;AAwDlC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,WAAW,EAACE,KAAK,CAACC,IAAN,CAAWH;AADlB,GAAP;AAGD;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLpB,IAAAA,cAAc,EAAGkB,IAAD,IAAU;AACxBE,MAAAA,QAAQ,CAACpB,cAAc,CAACkB,IAAD,CAAf,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,eAAenB,OAAO,CAACiB,eAAD,EAAiBG,kBAAjB,CAAP,CAA6ClB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInUp from './pages/SIgn/SIgnInUp';\nimport {auth, createUserProfileDoc} from './firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/userActions';\n\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n\n    const {setCurrentUser} = this.props;\n    // this is a metoh in auth library, param is what is user state \n    // this connection is always open and we need to close it in unmount\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDoc(userAuth);\n        userRef.onSnapshot(snapshot => {\n          // this.setState({\n          //   currentUser: {\n          //     id: snapshot.id,\n          //     ...snapshot.data()\n          //   }\n          // }, () => {\n          //   console.log(this.state);\n          // });\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          })\n        });\n      }\n\n      setCurrentUser(userAuth);\n      \n      // this.setState({\n      //   currentUser:user\n      // });\n    });\n  }\n\n  componentWillUnmount() {\n    // to close subscription and connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/shop' component={ShopPage} />\n          <Route exact path='/sign' render={() => this.props.currentUser ? <Redirect to='/'/> : <SignInUp />} />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser:state.user.currentUser\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCurrentUser: (user) => {\n      dispatch(setCurrentUser(user))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (App);\n"]},"metadata":{},"sourceType":"module"}