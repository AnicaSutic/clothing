{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\a.sutic\\\\React\\\\clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport * as actionType from '../constants/index';\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './userActions';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDoc, user);\n    const snapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDoc, user);\n    const snapshot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(actionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\redux\\user\\userSaga.js"],"names":["takeLatest","put","all","call","actionType","googleProvider","auth","createUserProfileDoc","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","snapshot","get","id","data","error","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,oBAA/B,QAA2D,+BAA3D;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,eAAjG;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACe,MAAMN,IAAI,CAACO,eAAL,CAAqBR,cAArB,CADrB;AAAA,UACOS,IADP,QACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACI,oBAAD,EAAsBO,IAAtB,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMhB,GAAG,CAACO,mBAAmB;AAAEU,MAAAA,EAAE,EAACF,QAAQ,CAACE;AAAd,OAAqBF,QAAQ,CAACG,IAAT,EAArB,EAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAK,CAACC,OAAP,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAV,CAA1B,EAAuD;AAC1D,MAAI;AAAA,kBACe,MAAMnB,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADrB;AAAA,UACOX,IADP,SACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACI,oBAAD,EAAsBO,IAAtB,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMhB,GAAG,CAACS,kBAAkB;AAAEQ,MAAAA,EAAE,EAACF,QAAQ,CAACE;AAAd,OAAqBF,QAAQ,CAACG,IAAT,EAArB,EAAnB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACU,kBAAkB,CAACS,KAAK,CAACC,OAAP,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAM3B,UAAU,CAACI,UAAU,CAACwB,oBAAZ,EAAiChB,gBAAjC,CAAhB;AACH;AAED,OAAO,UAAUiB,kBAAV,GAA+B;AAClC,QAAM7B,UAAU,CAACI,UAAU,CAAC0B,mBAAZ,EAAgCR,eAAhC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACwB,mBAAD,CADE,EAENxB,IAAI,CAAC0B,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport * as actionType from '../constants/index';\r\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './userActions';\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDoc,user);\r\n        const snapshot = yield userRef.get();\r\n        yield put(googleSignInSuccess({id:snapshot.id, ...snapshot.data()}))\r\n    } catch (error) {\r\n        yield put(googleSignInFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email,password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        const userRef = yield call(createUserProfileDoc,user);\r\n        const snapshot = yield userRef.get();\r\n        yield put(emailSignInSuccess({id:snapshot.id, ...snapshot.data()}))\r\n    } catch (error) {\r\n        yield put(emailSignInFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(actionType.GOOGLE_SIGN_IN_START,signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(actionType.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}