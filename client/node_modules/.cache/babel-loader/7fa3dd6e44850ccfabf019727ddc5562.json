{"ast":null,"code":"import * as actionType from \"../constants/index\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function fetchCollectionsStart() {\n  return {\n    type: actionType.FETCH_COLLECTION_START\n  };\n}\nexport function fetchCollectionsSuccess(collectionsMap) {\n  return {\n    type: actionType.FETCH_COLLECTION_SUCCESS,\n    payload: collectionsMap\n  };\n}\nexport function fetchCollectionsFailure(errorMessage) {\n  return {\n    type: actionType.FETCH_COLLECTION_FAILURE,\n    payload: errorMessage\n  };\n} // we dont need this anumore because we move this into saga\n\nexport function fetchCollectionsStartAsync() {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\"); // get our collection\n\n    dispatch(fetchCollectionsStart()); // dispatch that fetch is started\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n      this.setState({\n        loading: false\n      });\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n}","map":{"version":3,"sources":["C:\\Users\\a.sutic\\React\\clothing\\src\\redux\\shop\\shopActions.js"],"names":["actionType","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading","catch","error","message"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,oBAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,SAASC,qBAAT,GAAiC;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,UAAU,CAACK;AADZ,GAAP;AAGD;AAED,OAAO,SAASC,uBAAT,CAAiCC,cAAjC,EAAiD;AACtD,SAAO;AACLH,IAAAA,IAAI,EAAEJ,UAAU,CAACQ,wBADZ;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AAED,OAAO,SAASG,uBAAT,CAAiCC,YAAjC,EAA+C;AACpD,SAAO;AACLP,IAAAA,IAAI,EAAEJ,UAAU,CAACY,wBADZ;AAELH,IAAAA,OAAO,EAACE;AAFH,GAAP;AAID,C,CAED;;AACA,OAAO,SAASE,0BAAT,GAAsC;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CADe,CAC4C;;AAC3DF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAFe,CAEoB;;AAEnCY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,WAAKa,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD,EAIGC,KAJH,CAISC,KAAK,IAAIT,QAAQ,CAACJ,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAKH,GATD;AAUD","sourcesContent":["import * as actionType from \"../constants/index\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\n\r\nexport function fetchCollectionsStart() {\r\n    return {\r\n      type: actionType.FETCH_COLLECTION_START\r\n    };\r\n  }\r\n\r\n  export function fetchCollectionsSuccess(collectionsMap) {\r\n    return {\r\n      type: actionType.FETCH_COLLECTION_SUCCESS,\r\n      payload: collectionsMap\r\n    };\r\n  }\r\n\r\n  export function fetchCollectionsFailure(errorMessage) {\r\n    return {\r\n      type: actionType.FETCH_COLLECTION_FAILURE,\r\n      payload:errorMessage\r\n    };\r\n  }\r\n  \r\n  // we dont need this anumore because we move this into saga\r\n  export function fetchCollectionsStartAsync() {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection(\"collections\"); // get our collection\r\n        dispatch(fetchCollectionsStart()); // dispatch that fetch is started\r\n        \r\n        collectionRef.get().then(snapshot => {\r\n          const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n          dispatch(fetchCollectionsSuccess(collectionsMap))\r\n          this.setState({ loading: false });\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}